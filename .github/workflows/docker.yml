name: Build

on: [push]

jobs:
  build-windows:
    name: Deploy
    runs-on: ubuntu-18.04
    env:
      DOCKER_REGISTRY: registry.hub.docker.com
      DOCKER_IMAGE: rubbaboy/ttest
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_TARGET_PLATFORM: linux/arm/v7
    steps:
      - uses: actions/checkout@v1
      - name: Setup Dart Action
        uses: cedx/setup-dart@v2.2.0
      - name: Install dependensies
        run: pub get
      - name: Activate webdev
        run: |
          pub global activate webdev
          export PATH="$PATH":"$HOME/.pub-cache/bin"
      - name: Building
        run: pub global run webdev build --output web:build
      - name: Cleaning up
        run: rm -rf build/packages && rm -f build/.build.manifest build/.packages
      - name: Prepare Branches
        shell: bash
        id: prepare
        run: |
          echo ::set-output name=branch::$(echo ${GITHUB_REF#refs/heads/})
          echo ::set-output name=hash::$(echo $(git rev-parse --short "$GITHUB_SHA") | cut -c1-6)
      - name: Prepare Docker
        id: prepare_docker
        run: |
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}
          echo ::set-output name=version::${{ steps.prepare.outputs.branch }}-${{ steps.prepare.outputs.hash }}
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
      - name: Docker Login
        if: success()
        run: echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin
      - name: Run Buildx
        if: success()
        run: docker buildx build --platform linux/arm/7 --tag ${{ steps.prepare_docker.outputs.docker_image }}:${{ steps.prepare_docker.outputs.version }} --output type=image,push=true .
      - name: Create docker shield
        uses: RubbaBoy/BYOB@v1.1.0
        with:
          NAME: lak-frontend
          LABEL: docker
          STATUS: "lak-frontend:${{ steps.get_branch.outputs.branch }}-${{ steps.get_hash.outputs.hash }}"
          COLOR: 0576B7
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
